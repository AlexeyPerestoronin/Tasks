{
    // "Clangd Language Serrver"-extension adjustments
    "C_Cpp.intelliSenseEngine": "disabled",
    "clangd.restartAfterCrash": true,
    "clangd.fallbackFlags": [
        "-I${workspaceFolder}/Cpp/build/_deps/googletest-src/googletest/include",
        "-I${workspaceFolder}/Cpp/build/_deps/googletest-src/googlemock/include"
    ],
    "clangd.arguments": [
        // quantity of parallel workers
        "-j=2",
        // show in outpot only error-messages
        "--log=error",
        // pretty pring a json-output
        "--pretty",
        // launch indexing in background
        "--background-index",
        // never insert headers to solve symbols mistake found problem
        "--header-insertion=never",
        // full path to the code build directory
        "--compile-commands-dir=${workspaceFolder}/Cpp/build",
    ],

    // "clang-format.style": "${workspaceFolder}/Cpp/.clang-format",

    // "C++ TestMate"-extension adjustments
    "testMate.cpp.test.executables" : "${workspaceFolder}/Cpp/build/*.exe",
    "testMate.cpp.debug.configTemplate": "name:Debug Cpp",

    "rust-analyzer.linkedProjects": [
        "${workspaceFolder}/Rust/Education/gessing_game/Cargo.toml",
        "${workspaceFolder}/Rust/Education/variables/Cargo.toml",
        "${workspaceFolder}/Rust/Education/data_types/Cargo.toml",
        "${workspaceFolder}/Rust/Education/functions/Cargo.toml",
        "${workspaceFolder}/Rust/Education/branches/Cargo.toml",
        "${workspaceFolder}/Rust/Education/loops/Cargo.toml",
        "${workspaceFolder}/Rust/Education/slices/Cargo.toml",
        "${workspaceFolder}/Rust/Education/structures/Cargo.toml",
        "${workspaceFolder}/Rust/Education/enums/Cargo.toml",
        "${workspaceFolder}/Rust/Education/option/Cargo.toml",
        "${workspaceFolder}/Rust/Education/collections/Cargo.toml",
        "${workspaceFolder}/Rust/Education/traits/Cargo.toml",
        "${workspaceFolder}/Rust/Education/testing/Cargo.toml",
        "${workspaceFolder}/Rust/Tasks/degrees/Cargo.toml",
        "${workspaceFolder}/Rust/Tasks/fibonacci_digits/Cargo.toml",
        "${workspaceFolder}/Rust/Tasks/massive_manipulations/Cargo.toml",
        "${workspaceFolder}/Rust/let_code/Cargo.toml",
    ],
    "cSpell.words": [
        "letcode",
        "nums"
    ],
    "files.associations": {
        "list": "cpp",
        "algorithm": "cpp",
        "any": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "cctype": "cpp",
        "chrono": "cpp",
        "cmath": "cpp",
        "complex": "cpp",
        "condition_variable": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "deque": "cpp",
        "exception": "cpp",
        "forward_list": "cpp",
        "fstream": "cpp",
        "functional": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "ios": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "iterator": "cpp",
        "limits": "cpp",
        "locale": "cpp",
        "map": "cpp",
        "memory": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "optional": "cpp",
        "ostream": "cpp",
        "ratio": "cpp",
        "regex": "cpp",
        "set": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "string": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "xthread": "cpp",
        "thread": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "typeinfo": "cpp",
        "unordered_map": "cpp",
        "unordered_set": "cpp",
        "utility": "cpp",
        "variant": "cpp",
        "vector": "cpp",
        "xfacet": "cpp",
        "xhash": "cpp",
        "xiosbase": "cpp",
        "xlocale": "cpp",
        "xlocbuf": "cpp",
        "xlocinfo": "cpp",
        "xlocmes": "cpp",
        "xlocmon": "cpp",
        "xlocnum": "cpp",
        "xloctime": "cpp",
        "xmemory": "cpp",
        "xmemory0": "cpp",
        "xstddef": "cpp",
        "xstring": "cpp",
        "xtr1common": "cpp",
        "xtree": "cpp",
        "xutility": "cpp"
    },
}
